{"meta":{"title":"MiraClei Blog","subtitle":"知识改变命运","description":"记录点滴，少走弯路","author":"Chen Changlei","url":"http://chenchanglei.github.io"},"pages":[],"posts":[{"title":"pip自动生成requirements.txt依赖关系清单","slug":"pip自动生成requirements-txt依赖关系清单","date":"2017-08-02T09:36:08.000Z","updated":"2017-08-02T09:41:06.000Z","comments":true,"path":"2017/08/02/pip自动生成requirements-txt依赖关系清单/","link":"","permalink":"http://chenchanglei.github.io/2017/08/02/pip自动生成requirements-txt依赖关系清单/","excerpt":"","text":"Python项目中经常会带requirements.txt文件，里面是项目所依赖的包的列表，也就是依赖关系清单，这个清单也可以使用pip命令自动生成。 $pip freeze &gt; requirements.txt 这里面写的是运行这个项目所需要的环境，包括一些库，运行之前需要使用如下命令安装这些库 pip install -r requirements.txt","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://chenchanglei.github.io/tags/Python/"}]},{"title":"python tab补全功能","slug":"python-tab补全功能","date":"2017-08-02T09:21:22.000Z","updated":"2017-08-02T09:31:56.000Z","comments":true,"path":"2017/08/02/python-tab补全功能/","link":"","permalink":"http://chenchanglei.github.io/2017/08/02/python-tab补全功能/","excerpt":"","text":"#1.确认第三方安装包路径 import sys6 sys.path2.在路径下建立tab.py文件 /Library/Python/2.7/site-packages/tab$ cat tab.py import readline,rlcompleter class TabCompleter(rlcompleter.Completer):“””Completer that supports indenting””” def complete(self, text, state): if not text: return (‘’, None)[state] else: return rlcompleter.Completer.complete(self, text, state)readline.set_completer(TabCompleter().complete) if ‘libedit’ in readline.doc:readline.parse_and_bind(“bind -e”)readline.parse_and_bind(“bind ‘’ rl_complete”)else:readline.parse_and_bind(“tab: complete”) import oshistfile = os.path.join(os.environ[“HOME”], “.pyhist”)try:readline.read_history_file(histfile)except IOError:passimport atexitatexit.register(readline.write_history_file, histfile)del histfile 3.启动python自动导入tab 新建文件.pystartup.py并填入内容 cat ~/.pystartup.py 内容： import sys import readline import rlcompleter if sys.platform == &apos;darwin&apos; and sys.version_info[0] == 2: readline.parse_and_bind(&quot;bind ^I rl_complete&quot;) else: readline.parse_and_bind(&quot;tab: complete&quot;) 4.设置环境变量.bash_profile $cat ~/.bash_profile $export PYTHONSTARTUP=$HOME/.pystartup.py","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://chenchanglei.github.io/tags/Python/"}]},{"title":"test","slug":"test","date":"2017-08-02T07:55:55.000Z","updated":"2017-08-02T08:29:12.000Z","comments":true,"path":"2017/08/02/test/","link":"","permalink":"http://chenchanglei.github.io/2017/08/02/test/","excerpt":"","text":"#welcome to my blog!http://www.jianshu.com/p/148e26058916 MacDown的使用规范总结 20分钟教你使用hexo搭建github博客","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-08-02T07:49:36.000Z","updated":"2017-08-02T07:49:36.000Z","comments":true,"path":"2017/08/02/hello-world/","link":"","permalink":"http://chenchanglei.github.io/2017/08/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}