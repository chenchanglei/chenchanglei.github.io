<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[pip自动生成requirements.txt依赖关系清单]]></title>
      <url>/2017/08/02/pip%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90requirements-txt%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E6%B8%85%E5%8D%95/</url>
      <content type="html"><![CDATA[<p>Python项目中经常会带requirements.txt文件，里面是项目所依赖的包的列表，也就是依赖关系清单，这个清单也可以使用pip命令自动生成。</p>
<pre><code>$pip freeze &gt; requirements.txt
</code></pre><p>这里面写的是运行这个项目所需要的环境，包括一些库，运行之前需要使用如下命令安装这些库</p>
<pre><code>pip install -r requirements.txt
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python tab补全功能]]></title>
      <url>/2017/08/02/python-tab%E8%A1%A5%E5%85%A8%E5%8A%9F%E8%83%BD/</url>
      <content type="html"><![CDATA[<p>#1.确认第三方安装包路径<br>    import sys6<br>    sys.path<br>2.在路径下建立tab.py文件</p>
<pre><code>/Library/Python/2.7/site-packages/tab$ cat tab.py

import readline,rlcompleter
</code></pre><p>class TabCompleter(rlcompleter.Completer):<br>“””Completer that supports indenting”””<br>    def complete(self, text, state):<br>      if not text:<br>        return (‘’, None)[state]<br>      else:<br>        return rlcompleter.Completer.complete(self, text, state)<br>readline.set_completer(TabCompleter().complete)</p>
<p>if ‘libedit’ in readline.<strong>doc</strong>:<br>readline.parse_and_bind(“bind -e”)<br>readline.parse_and_bind(“bind ‘’ rl_complete”)<br>else:<br>readline.parse_and_bind(“tab: complete”)</p>
<p>import os<br>histfile = os.path.join(os.environ[“HOME”], “.pyhist”)<br>try:<br>readline.read_history_file(histfile)<br>except IOError:<br>pass<br>import atexit<br>atexit.register(readline.write_history_file, histfile)<br>del histfile</p>
<p>3.启动python自动导入tab</p>
<p>新建文件.pystartup.py并填入内容</p>
<pre><code>cat ~/.pystartup.py
</code></pre><p>  内容：</p>
<pre><code>import sys
import readline
import rlcompleter

if sys.platform == &apos;darwin&apos; and sys.version_info[0] == 2:  
readline.parse_and_bind(&quot;bind ^I rl_complete&quot;)
else:   
readline.parse_and_bind(&quot;tab: complete&quot;)
</code></pre><p>4.设置环境变量.bash_profile</p>
<pre><code>$cat ~/.bash_profile
$export PYTHONSTARTUP=$HOME/.pystartup.py
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/08/02/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
